{"version":3,"sources":["../src/utils/cn.ts","../src/select.tsx"],"names":["cn","classes","RtwSelect","items","placeholder","value","defaultValue","onValueChange","className","label","disabled","autoId","c","jsxs","jsx","e","ChevronDown","it","Check"],"mappings":"6iBAAO,SAASA,KAAMC,CAAAA,CAAmD,CACvE,OAAOA,CAAAA,CAAQ,MAAA,CAAO,OAAO,CAAA,CAAE,IAAA,CAAK,GAAG,CACzC,CCsBO,SAASC,EAAU,CACxB,KAAA,CAAAC,EACA,WAAA,CAAAC,CAAAA,CAAc,iBACd,KAAA,CAAAC,CAAAA,CACA,aAAAC,CAAAA,CACA,aAAA,CAAAC,EACA,SAAA,CAAAC,CAAAA,CACA,MAAAC,CAAAA,CACA,QAAA,CAAAC,CACF,CAAA,CAAmB,CACjB,IAAMC,CAAAA,CAAeC,YAAA,CAAA,KAAA,GAErB,OACEC,eAAAA,CAAC,OAAI,SAAA,CAAWL,CAAAA,CACb,UAAAC,CAAAA,CACCK,cAAAA,CAAC,SAAM,OAAA,CAASH,CAAAA,CAAQ,UAAU,mEAAA,CAC/B,QAAA,CAAAF,EACH,CAAA,CACE,IAAA,CAEJI,gBAAQE,YAAA,CAAA,IAAA,CAAP,CAAY,MAAOV,CAAAA,CAAO,YAAA,CAAcC,EAAc,aAAA,CAAeC,CAAAA,CAAe,SAAUG,CAAAA,CAC7F,QAAA,CAAA,CAAAG,gBAAQE,YAAA,CAAA,OAAA,CAAP,CACC,GAAIJ,CAAAA,CACJ,SAAA,CAAWX,EACT,kIAAA,CACA,oFAAA,CACA,kDACA,0DACF,CAAA,CACA,aAAYS,CAAAA,CAEZ,QAAA,CAAA,CAAAK,eAAQC,YAAA,CAAA,KAAA,CAAP,CAAa,YAAaX,CAAAA,CAAa,CAAA,CACxCU,eAAQC,YAAA,CAAA,IAAA,CAAP,CACC,SAAAD,cAAAA,CAACE,uBAAAA,CAAA,CAAY,SAAA,CAAU,oBAAA,CAAqB,cAAY,MAAA,CAAO,CAAA,CACjE,GACF,CAAA,CAEAF,cAAAA,CAAQC,oBAAP,CACC,QAAA,CAAAD,eAAQC,YAAA,CAAA,OAAA,CAAP,CACC,UAAWf,CAAAA,CACT,2EAAA,CACA,uCACF,CAAA,CAEA,QAAA,CAAAc,eAAQC,YAAA,CAAA,QAAA,CAAP,CAAgB,UAAU,KAAA,CACxB,QAAA,CAAAZ,EAAM,GAAA,CAAKc,CAAAA,EACVJ,gBAAQE,YAAA,CAAA,IAAA,CAAP,CAEC,MAAOE,CAAAA,CAAG,KAAA,CACV,SAAUA,CAAAA,CAAG,QAAA,CACb,UAAWjB,CAAAA,CACT,mGAAA,CACA,+EACA,6DACF,CAAA,CAEA,UAAAc,cAAAA,CAAQC,YAAA,CAAA,QAAA,CAAP,CAAiB,QAAA,CAAAE,CAAAA,CAAG,MAAM,CAAA,CAC3BH,cAAAA,CAAQC,2BAAP,CAAqB,SAAA,CAAU,4CAC9B,QAAA,CAAAD,cAAAA,CAACI,kBAAA,CAAM,SAAA,CAAU,UAAU,aAAA,CAAY,MAAA,CAAO,EAChD,CAAA,CAAA,CAAA,CAZKD,CAAAA,CAAG,KAaV,CACD,CAAA,CACH,EACF,CAAA,CACF,CAAA,CAAA,CACF,GACF,CAEJ","file":"select.cjs","sourcesContent":["export function cn(...classes: Array<string | undefined | null | false>) {\n  return classes.filter(Boolean).join(\" \")\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as Select from \"@radix-ui/react-select\"\nimport { ChevronDown, Check } from 'lucide-react'\nimport { cn } from \"./utils/cn\"\n\nexport interface RtwSelectItem {\n  label: string\n  value: string\n  disabled?: boolean\n}\n\nexport interface RtwSelectProps {\n  items: RtwSelectItem[]\n  placeholder?: string\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  className?: string\n  label?: string\n  disabled?: boolean\n}\n\nexport function RtwSelect({\n  items,\n  placeholder = \"Seleccionar...\",\n  value,\n  defaultValue,\n  onValueChange,\n  className,\n  label,\n  disabled,\n}: RtwSelectProps) {\n  const autoId = React.useId()\n\n  return (\n    <div className={className}>\n      {label ? (\n        <label htmlFor={autoId} className=\"mb-1.5 block text-sm font-medium text-gray-900 dark:text-gray-100\">\n          {label}\n        </label>\n      ) : null}\n\n      <Select.Root value={value} defaultValue={defaultValue} onValueChange={onValueChange} disabled={disabled}>\n        <Select.Trigger\n          id={autoId}\n          className={cn(\n            \"inline-flex w-full items-center justify-between gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900\",\n            \"focus:outline-none focus:ring-2 focus:ring-emerald-500/50 focus:border-emerald-500\",\n            \"disabled:cursor-not-allowed disabled:opacity-50\",\n            \"dark:bg-gray-900 dark:text-gray-100 dark:border-gray-700\"\n          )}\n          aria-label={label}\n        >\n          <Select.Value placeholder={placeholder} />\n          <Select.Icon>\n            <ChevronDown className=\"h-4 w-4 opacity-70\" aria-hidden=\"true\" />\n          </Select.Icon>\n        </Select.Trigger>\n\n        <Select.Portal>\n          <Select.Content\n            className={cn(\n              \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white shadow-lg\",\n              \"dark:border-gray-800 dark:bg-gray-900\"\n            )}\n          >\n            <Select.Viewport className=\"p-1\">\n              {items.map((it) => (\n                <Select.Item\n                  key={it.value}\n                  value={it.value}\n                  disabled={it.disabled}\n                  className={cn(\n                    \"relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none\",\n                    \"text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n                    \"hover:bg-gray-100 dark:text-gray-100 dark:hover:bg-gray-800\"\n                  )}\n                >\n                  <Select.ItemText>{it.label}</Select.ItemText>\n                  <Select.ItemIndicator className=\"absolute right-2 inline-flex items-center\">\n                    <Check className=\"h-4 w-4\" aria-hidden=\"true\" />\n                  </Select.ItemIndicator>\n                </Select.Item>\n              ))}\n            </Select.Viewport>\n          </Select.Content>\n        </Select.Portal>\n      </Select.Root>\n    </div>\n  )\n}\n"]}