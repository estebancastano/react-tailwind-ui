{"version":3,"sources":["../src/modal.tsx"],"names":["RtwModal","title","description","open","onOpenChange","triggerLabel","children","footer","jsxs","jsx","RtwButton","cn","X","Fragment"],"mappings":"8MAkBO,SAASA,CAAAA,CAAS,CACvB,KAAA,CAAAC,CAAAA,CACA,WAAA,CAAAC,CAAAA,CACA,KAAAC,CAAAA,CACA,YAAA,CAAAC,EACA,YAAA,CAAAC,CAAAA,CAAe,cACf,QAAA,CAAAC,CAAAA,CACA,MAAA,CAAAC,CACF,EAAkB,CAChB,OACEC,KAAQ,CAAA,CAAA,IAAA,CAAP,CAAY,KAAML,CAAAA,CAAM,YAAA,CAAcC,CAAAA,CACrC,QAAA,CAAA,CAAAK,IAAQ,CAAA,CAAA,OAAA,CAAP,CAAe,OAAA,CAAO,IAAA,CACrB,SAAAA,GAAAA,CAACC,GAAAA,CAAA,CAAU,OAAA,CAAQ,UAAW,QAAA,CAAAL,CAAAA,CAAa,EAC7C,CAAA,CAEAG,IAAAA,CAAQ,SAAP,CACC,QAAA,CAAA,CAAAC,GAAAA,CAAQ,CAAA,CAAA,OAAA,CAAP,CAAe,SAAA,CAAU,6FAAA,CAA8F,EACxHD,IAAAA,CAAQ,CAAA,CAAA,OAAA,CAAP,CACC,SAAA,CAAWG,GAAAA,CACT,iHAAA,CACA,kBACF,EACA,kBAAA,CAAkBT,CAAAA,CAAc,iBAAmB,MAAA,CAEnD,QAAA,CAAA,CAAAM,KAAC,KAAA,CAAA,CAAI,SAAA,CAAU,wCAAA,CACb,QAAA,CAAA,CAAAA,KAAC,KAAA,CAAA,CACC,QAAA,CAAA,CAAAC,GAAAA,CAAQ,CAAA,CAAA,KAAA,CAAP,CAAa,SAAA,CAAU,uBAAA,CAAyB,QAAA,CAAAR,CAAAA,CAAM,EACtDC,CAAAA,CACCO,GAAAA,CAAQ,cAAP,CAAmB,EAAA,CAAG,iBAAiB,SAAA,CAAU,+CAAA,CAC/C,QAAA,CAAAP,CAAAA,CACH,EACE,IAAA,CAAA,CACN,CAAA,CACAO,IAAQ,CAAA,CAAA,KAAA,CAAP,CACC,UAAU,8KAAA,CACV,YAAA,CAAW,QAAA,CAEX,QAAA,CAAAA,IAACG,CAAAA,CAAA,CAAE,UAAU,SAAA,CAAU,aAAA,CAAY,OAAO,CAAA,CAC5C,CAAA,CAAA,CACF,CAAA,CAEAH,GAAAA,CAAC,OAAI,SAAA,CAAU,MAAA,CAAQ,QAAA,CAAAH,CAAAA,CAAS,EAEhCG,GAAAA,CAAC,KAAA,CAAA,CAAI,SAAA,CAAU,0CAAA,CACZ,SAAAF,CAAAA,EAGCC,IAAAA,CAAAK,SAAA,CACE,QAAA,CAAA,CAAAJ,IAAQ,CAAA,CAAA,KAAA,CAAP,CAAa,OAAA,CAAO,IAAA,CACnB,SAAAA,GAAAA,CAACC,GAAAA,CAAA,CAAU,OAAA,CAAQ,OAAA,CAAQ,oBAAQ,CAAA,CACrC,CAAA,CACAD,GAAAA,CAACC,GAAAA,CAAA,CAAU,QAAA,CAAA,WAAA,CAAS,CAAA,CAAA,CACtB,EAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,GACF,CAEJ","file":"chunk-5IOU43RK.js","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as Dialog from \"@radix-ui/react-dialog\"\nimport { X } from 'lucide-react'\nimport { RtwButton } from \"./button\"\nimport { cn } from \"./utils/cn\"\n\nexport interface RtwModalProps {\n  title: string\n  description?: string\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  triggerLabel?: string\n  children?: React.ReactNode\n  footer?: React.ReactNode\n}\n\nexport function RtwModal({\n  title,\n  description,\n  open,\n  onOpenChange,\n  triggerLabel = \"Abrir modal\",\n  children,\n  footer,\n}: RtwModalProps) {\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Trigger asChild>\n        <RtwButton variant=\"outline\">{triggerLabel}</RtwButton>\n      </Dialog.Trigger>\n\n      <Dialog.Portal>\n        <Dialog.Overlay className=\"fixed inset-0 z-50 bg-black/50 data-[state=open]:animate-in data-[state=closed]:animate-out\" />\n        <Dialog.Content\n          className={cn(\n            \"fixed left-1/2 top-1/2 z-50 w-full max-w-lg -translate-x-1/2 -translate-y-1/2 rounded-lg bg-white p-6 shadow-lg\",\n            \"dark:bg-gray-900\"\n          )}\n          aria-describedby={description ? \"rtw-modal-desc\" : undefined}\n        >\n          <div className=\"flex items-start justify-between gap-4\">\n            <div>\n              <Dialog.Title className=\"text-lg font-semibold\">{title}</Dialog.Title>\n              {description ? (\n                <Dialog.Description id=\"rtw-modal-desc\" className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">\n                  {description}\n                </Dialog.Description>\n              ) : null}\n            </div>\n            <Dialog.Close\n              className=\"rounded-md p-1 text-gray-500 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-emerald-500/50 dark:hover:bg-gray-800 dark:hover:text-gray-100\"\n              aria-label=\"Cerrar\"\n            >\n              <X className=\"h-5 w-5\" aria-hidden=\"true\" />\n            </Dialog.Close>\n          </div>\n\n          <div className=\"mt-4\">{children}</div>\n\n          <div className=\"mt-6 flex items-center justify-end gap-2\">\n            {footer ? (\n              footer\n            ) : (\n              <>\n                <Dialog.Close asChild>\n                  <RtwButton variant=\"ghost\">Cancelar</RtwButton>\n                </Dialog.Close>\n                <RtwButton>Confirmar</RtwButton>\n              </>\n            )}\n          </div>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  )\n}\n"]}